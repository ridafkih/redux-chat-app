{"version":3,"sources":["components/Header/molecules/Profile/Profile.module.css","components/ConversationList/molecules/ConversationSearch/ConversationSearch.module.css","components/Header/molecules/WindowActions/WindowActions.jsx","components/Header/molecules/Profile/Profile.jsx","components/Header/Header.jsx","components/ConversationList/molecules/ConversationSearch/ConversationSearch.jsx","redux/slices/uiSlice.js","redux/slices/chatSlice.js","components/ConversationList/molecules/ConversationPreview/ConversationPreview.jsx","components/ConversationList/ConversationList.jsx","components/Conversation/molecules/Chat/molecules/ChatInput/ChatInput.jsx","components/Conversation/molecules/Chat/molecules/MessageBunch/MessageBunch.jsx","components/Conversation/molecules/Chat/Chat.jsx","components/Conversation/molecules/ConversationHeader/ConversationHeader.jsx","components/Conversation/Conversation.jsx","components/Body/Body.jsx","App.jsx","redux/store.js","index.js","components/Conversation/molecules/Chat/molecules/MessageBunch/MessageBunch.module.css","components/ConversationList/ConversationList.module.css","components/Conversation/molecules/Chat/Chat.module.css","components/Header/Header.module.css","components/Body/Body.module.css","components/Conversation/Conversation.module.css","components/Conversation/molecules/ConversationHeader/ConversationHeader.module.css","components/ConversationList/molecules/ConversationPreview/ConversationPreview.module.css","components/Header/molecules/WindowActions/WindowActions.module.css","components/Conversation/molecules/Chat/molecules/ChatInput/ChatInput.module.css"],"names":["module","exports","WindowActions","className","styles","container","button","close","minimize","fullscreen","Profile","avatar_container","src","faker","image","avatar","alt","name","fake","dropdown","Header","ConversationSearch","field_region","icon","input","type","placeholder","add_conversation","uiSlice","createSlice","initialState","conversationId","reducers","conversationSwitched","state","action","payload","conversationClosed","actions","makeKeyGenerator","key","generateConversationKey","generateAuthorKey","conversations","Array","Math","ceil","random","map","id","read","target","avatarUrl","messages","timestamp","Date","getTime","content","hacker","phrase","outgoing","chatSlice","conversationAdded","conversationRead","conversation","messageSent","message","getRelevantConversation","filter","messageReceived","conversationIndex","findIndex","ConversationPreview","selected","previewText","dispatch","useDispatch","useEffect","interval","setInterval","clearInterval","unread","onClick","handleClick","metadata","preview","empty_preview","ConversationList","useSelector","chat","ui","list","index","lastMessage","length","ChatInput","useState","value","setValue","label","onChange","ev","onKeyDown","buttons","Message","parseDateObject","date","hours","getHours","minutes","getMinutes","meridiem","parsedHours","parsedMinutes","parsedTime","weekday","toLocaleString","month","day","getDate","year","getFullYear","parsed","MessageBunch","bunch","data-timestamp","messageContent","Chat","x","bunches","entries","last","push","bunchMessages","ConversationHeader","recipient","Conversation","Body","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91de07dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__20-nQ\",\"avatar\":\"Profile_avatar__1Fdxp\",\"name\":\"Profile_name__KVEEa\",\"dropdown\":\"Profile_dropdown__1XJ2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConversationSearch_container__FdLLY\",\"field_region\":\"ConversationSearch_field_region__2B6DW\",\"icon\":\"ConversationSearch_icon__3mzjw\",\"input\":\"ConversationSearch_input__ypiVV\",\"add_conversation\":\"ConversationSearch_add_conversation__1iDGN\"};","import React from \"react\";\nimport styles from \"./WindowActions.module.css\";\n\nfunction WindowActions() {\n  return (\n    <div className={styles.container}>\n      <button className={`${styles.button} ${styles.close}`}></button>\n      <button className={`${styles.button} ${styles.minimize}`}></button>\n      <button className={`${styles.button} ${styles.fullscreen}`}></button>\n    </div>\n  );\n}\n\nexport default WindowActions;\n","import React from \"react\";\nimport styles from \"./Profile.module.css\";\n\nimport faker from \"faker\";\n\nfunction Profile() {\n  return (\n    <div className={styles.container}>\n      <div className={styles.avatar_container}>\n        <img\n          src={faker.image.avatar()}\n          alt=\"user avatar\"\n          className={styles.avatar}\n        />\n      </div>\n      <div className={styles.name}>\n        {faker.fake(\"{{name.firstName}} {{name.lastName}}\")}\n      </div>\n      <div className={styles.dropdown}></div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\nimport WindowActions from \"./molecules/WindowActions/WindowActions\";\nimport Profile from \"./molecules/Profile/Profile\";\n\nfunction Header() {\n  return (\n    <div className={styles.container}>\n      <WindowActions></WindowActions>\n      <Profile></Profile>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./ConversationSearch.module.css\";\n\nimport { FiSearch, FiEdit } from \"react-icons/fi\";\n\nfunction ConversationSearch() {\n  return (\n    <div className={styles.container}>\n      <label className={styles.field_region}>\n        <FiSearch className={styles.icon} />\n        <input className={styles.input} type=\"text\" placeholder=\"Search...\" />\n      </label>\n      <button className={styles.add_conversation}>\n        <FiEdit />\n      </button>\n    </div>\n  );\n}\n\nexport default ConversationSearch;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: {\n    conversationId: 0,\n  },\n  reducers: {\n    conversationSwitched: (state, action) => {\n      return { conversationId: action.payload };\n    },\n    conversationClosed: (state, action) => {},\n  },\n});\n\nexport const { conversationSwitched, conversationClosed } = uiSlice.actions;\nexport default uiSlice.reducer;\n","import faker from \"faker\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * A user object.\n * @typedef {{ id: number, name: string, avatarUrl: string }} User\n */\n\n/**\n * A message object.\n * @typedef {{ conversationId: number, timestamp: Date, content: string, outgoing: boolean }} Message\n */\n\n/**\n * A conversation object.\n * @typedef {{ id: number, target: User, messages: Message[], read: boolean }}\n */\n\nfunction makeKeyGenerator(key = -1) {\n  return function () {\n    return ++key;\n  };\n}\n\nconst generateConversationKey = makeKeyGenerator();\nconst generateAuthorKey = makeKeyGenerator();\n\n// I would never actually name a function this.\nconst generateMumboJumboConvo = () => {\n  return [...Array(Math.ceil(Math.random() * 10))].map(() => {\n    return {\n      timestamp: new Date().getTime(),\n      content: faker.hacker.phrase(),\n      outgoing: Math.random() > 0.5,\n    };\n  });\n};\n\nconst generateConversations = () => {\n  return [...Array(Math.ceil(Math.random() * 15 + 3))].map(() => {\n    return {\n      id: generateConversationKey(),\n      read: Math.random() > 0.5,\n      target: {\n        id: generateAuthorKey(),\n        name: faker.fake(\"{{name.firstName}} {{name.lastName}}\"),\n        avatarUrl: faker.image.avatar(),\n      },\n      messages: generateMumboJumboConvo(),\n    };\n  });\n};\n\nconst initialState = {\n  conversations: generateConversations(),\n};\n\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    conversationAdded: (state, action) => {\n      // ...\n    },\n    conversationRead: (state, action) => {\n      return {\n        ...state,\n        conversations: state.conversations.map((conversation) => {\n          if (conversation.id !== action.payload) return conversation;\n          return { ...conversation, read: true };\n        }),\n      };\n    },\n    messageSent: (state, action) => {\n      const {\n        conversationId,\n        timestamp = new Date().getTime(),\n        content,\n      } = action.payload;\n\n      const message = { timestamp, content, outgoing: true };\n      const conversation = getRelevantConversation(state, conversationId);\n\n      return {\n        ...state,\n        conversations: [\n          {\n            ...conversation,\n            messages: [...conversation.messages, message],\n          },\n          ...state.conversations.filter(\n            (conversation) => conversation.id !== conversationId\n          ),\n        ],\n      };\n    },\n    messageReceived: (state, action) => {\n      const {\n        conversationId,\n        timestamp = new Date().getTime(),\n        content,\n      } = action.payload;\n\n      const message = { timestamp, content, outgoing: false };\n      const conversation = getRelevantConversation(state, conversationId);\n\n      return {\n        ...state,\n        conversations: [\n          {\n            ...conversation,\n            messages: [...conversation.messages, message],\n            read: false,\n          },\n          ...state.conversations.filter(\n            (conversation) => conversation.id !== conversationId\n          ),\n        ],\n      };\n    },\n  },\n});\n\nfunction getRelevantConversation(state, conversationId) {\n  const conversationIndex = state.conversations.findIndex((conversation) => {\n    return conversation.id === conversationId;\n  });\n\n  return state.conversations[conversationIndex];\n}\n\nexport const {\n  conversationAdded,\n  conversationRead,\n  messageSent,\n  messageReceived,\n} = chatSlice.actions;\n\nexport default chatSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { conversationSwitched } from \"../../../../redux/slices/uiSlice\";\nimport { messageReceived } from \"../../../../redux/slices/chatSlice\";\n\nimport faker from \"faker\";\n\nimport styles from \"./ConversationPreview.module.css\";\n\n/**\n *\n * @param {{\n *  id: number,\n *  selected: boolean,\n *  read: boolean,\n *  name: string,\n *  avatar: string,\n *  previewText: string\n * }} param0\n * @returns\n */\nfunction ConversationPreview({\n  id,\n  selected,\n  read,\n  name,\n  avatar,\n  previewText,\n}) {\n  const dispatch = useDispatch();\n\n  const handleClick = (id) => {\n    dispatch(conversationSwitched(id));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(\n        messageReceived({\n          conversationId: id,\n          content: faker.hacker.phrase(),\n        })\n      );\n    }, Math.random() * 15000 + 30000);\n\n    return () => clearInterval(interval);\n  }, [dispatch, id]);\n\n  return (\n    <div\n      className={`\n        ${styles.container} \n        ${read ? \"\" : styles.unread} ${selected ? styles.selected : \"\"}`}\n      onClick={() => handleClick(id)}\n    >\n      <div className={styles.avatar_container}>\n        <img className={styles.avatar} src={avatar} alt=\"avatar\" />\n      </div>\n      <div className={styles.metadata}>\n        <div className={styles.name}>{name}</div>\n        <div\n          className={`${previewText ? styles.preview : styles.empty_preview}`}\n        >\n          {previewText || \"No Messages...\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConversationPreview;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport styles from \"./ConversationList.module.css\";\n\nimport ConversationSearch from \"./molecules/ConversationSearch/ConversationSearch\";\nimport ConversationPreview from \"./molecules/ConversationPreview/ConversationPreview\";\n\nfunction ConversationList() {\n  const { conversations } = useSelector((state) => state.chat);\n  const { conversationId } = useSelector((state) => state.ui);\n\n  return (\n    <div className={styles.container}>\n      <ConversationSearch></ConversationSearch>\n      <div className={styles.list}>\n        {conversations.map(({ id, read, target, messages }, index) => {\n          const lastMessage = messages[messages.length - 1];\n          const previewText = lastMessage ? lastMessage.content : \"\";\n\n          return (\n            <ConversationPreview\n              id={id}\n              selected={conversationId === id}\n              read={read}\n              avatar={target.avatarUrl}\n              name={target.name}\n              previewText={previewText}\n              key={index}\n            ></ConversationPreview>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ConversationList;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { messageSent } from \"../../../../../../redux/slices/chatSlice\";\n\nimport styles from \"./ChatInput.module.css\";\n\nimport { FiMic, FiMessageSquare } from \"react-icons/fi\";\n\nfunction ChatInput() {\n  const { conversationId } = useSelector((state) => state.ui);\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (ev) => {\n    setValue(ev.target.value);\n  };\n\n  const handleKeyDown = (ev) => {\n    if (ev.key !== \"Enter\" || !value) return;\n    dispatch(\n      messageSent({\n        conversationId,\n        timestamp: new Date().getTime(),\n        content: value,\n        outgoing: true,\n      })\n    );\n\n    setValue(\"\");\n  };\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        <input\n          type=\"text\"\n          placeholder=\"Write a message...\"\n          className={styles.input}\n          value={value}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n        />\n      </label>\n      <div className={styles.buttons}>\n        <FiMic className={styles.icon} />\n        <FiMessageSquare className={styles.icon} />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInput;\n","import React from \"react\";\nimport styles from \"./MessageBunch.module.css\";\n\n/**\n * Message bunch component\n * @param {{ outgoing: boolean, messages: string | string[], timestamp: number }}\n * @returns {React.ReactNode}\n */\nfunction MessageBunch({ outgoing, messages, timestamp }) {\n  return (\n    <div\n      className={`${styles.bunch} ${outgoing ? styles.outgoing : \"\"}`}\n      data-timestamp={parseDateObject(timestamp)}\n    >\n      {typeof messages === \"string\" ? (\n        <Message content={messages} />\n      ) : (\n        messages.map((messageContent, key) => {\n          return <Message content={messageContent} key={key} />;\n        })\n      )}\n    </div>\n  );\n}\n\n/**\n * Singular message component.\n * @param {{ content: string }}\n * @returns {React.ReactNode}\n */\nfunction Message({ content }) {\n  return <div className={styles.message}>{content}</div>;\n}\n\nfunction parseDateObject(timestamp = new Date().getTime()) {\n  const date = new Date(timestamp);\n  let hours = date.getHours();\n  const minutes = date.getMinutes();\n  const meridiem = hours >= 12 ? \"pm\" : \"am\";\n  const parsedHours = hours === 0 ? 12 : hours % 12;\n  const parsedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n  const parsedTime = `${parsedHours}:${parsedMinutes}${meridiem}`;\n\n  const weekday = date.toLocaleString(\"en\", {\n    weekday: \"short\",\n  });\n\n  const month = date.toLocaleString(\"en\", {\n    month: \"short\",\n  });\n\n  const day = date.getDate();\n  const year = date.getFullYear();\n\n  const parsed = `${parsedTime} on ${weekday}, ${month} ${day}, ${year}`;\n\n  return parsed;\n}\n\nexport default MessageBunch;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { conversationRead } from \"../../../../redux/slices/chatSlice\";\n\nimport ChatInput from \"./molecules/ChatInput/ChatInput\";\nimport styles from \"./Chat.module.css\";\n\nimport MessageBunch from \"./molecules/MessageBunch/MessageBunch\";\n\nfunction Chat() {\n  const dispatch = useDispatch();\n\n  const { conversationId } = useSelector((state) => state.ui);\n  const { conversations } = useSelector((state) => state.chat);\n\n  const index = conversations.findIndex((x) => x.id === conversationId);\n  const conversation = conversations[index];\n\n  useEffect(() => {\n    dispatch(conversationRead(conversationId));\n  }, [conversationId, dispatch]);\n\n  /**\n   * Bunch the messages by their outgoing status.\n   */\n  const bunchMessages = () => {\n    const bunches = [];\n\n    if (!conversation) return [];\n    for (let [index, message] of conversation.messages.entries()) {\n      const { messages } = conversation;\n      const last = messages[index - 1];\n\n      if (!last) bunches.push([message]);\n      else if (last.outgoing !== message.outgoing) bunches.push([message]);\n      else bunches[bunches.length - 1].push(message);\n    }\n\n    return bunches;\n  };\n\n  const handleClick = () => dispatch(conversationRead(conversationId));\n\n  return (\n    <div className={styles.container} onClick={handleClick}>\n      <div className={styles.messages}>\n        {bunchMessages().map((bunch, index) => {\n          const { timestamp, outgoing } = bunch[bunch.length - 1];\n          return (\n            <MessageBunch\n              timestamp={timestamp}\n              outgoing={outgoing}\n              messages={bunch.map(({ content }) => content)}\n              key={index}\n            />\n          );\n        })}\n      </div>\n      <ChatInput />\n    </div>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport styles from \"./ConversationHeader.module.css\";\n\nimport { FiMessageSquare, FiVideo, FiPhone } from \"react-icons/fi\";\n\nfunction ConversationHeader() {\n  const { conversationId } = useSelector((state) => state.ui);\n  const { conversations } = useSelector((state) => state.chat);\n\n  const index = conversations.findIndex((x) => x.id === conversationId);\n  const conversation = conversations[index];\n\n  return (\n    <div className={styles.container}>\n      {conversation && (\n        <>\n          <div className={styles.recipient}>\n            <div className={styles.avatar_container}>\n              <img\n                className={styles.avatar}\n                src={conversation.target.avatarUrl}\n                alt=\"avatar\"\n              />\n            </div>\n            <div className={styles.name}>{conversation.target.name}</div>\n          </div>\n          <div className={styles.actions}>\n            <FiMessageSquare className={`${styles.icon} ${styles.selected}`} />\n            <FiVideo className={styles.icon} />\n            <FiPhone className={styles.icon} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ConversationHeader;\n","import React from \"react\";\nimport styles from \"./Conversation.module.css\";\nimport Chat from \"./molecules/Chat/Chat\";\nimport ConversationHeader from \"./molecules/ConversationHeader/ConversationHeader\";\n\nfunction Conversation() {\n  return (\n    <div className={styles.container}>\n      <ConversationHeader />\n      <Chat />\n    </div>\n  );\n}\n\nexport default Conversation;\n","import React from \"react\";\nimport styles from \"./Body.module.css\";\n\nimport ConversationList from \"../ConversationList/ConversationList\";\nimport Conversation from \"../Conversation/Conversation\";\n\nfunction Body() {\n  return (\n    <div className={styles.container}>\n      <ConversationList></ConversationList>\n      <Conversation></Conversation>\n    </div>\n  );\n}\n\nexport default Body;\n","import Header from \"./components/Header/Header\";\nimport Body from \"./components/Body/Body\";\n\nexport default function App() {\n  return (\n    <>\n      <Header></Header>\n      <Body></Body>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport chat from \"./slices/chatSlice\";\nimport ui from \"./slices/uiSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    chat,\n    ui,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bunch\":\"MessageBunch_bunch__2Gu6U\",\"outgoing\":\"MessageBunch_outgoing__3Nz81\",\"message\":\"MessageBunch_message__2j-4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConversationList_container__kmqi8\",\"list\":\"ConversationList_list__3GWAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chat_container__3IGBl\",\"messages\":\"Chat_messages__1D9Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1VC87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Body_container__2vgAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Conversation_container__29rWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConversationHeader_container__2g_T0\",\"recipient\":\"ConversationHeader_recipient__2UIJP\",\"avatar_container\":\"ConversationHeader_avatar_container__3Rf6W\",\"avatar\":\"ConversationHeader_avatar__2lUU9\",\"name\":\"ConversationHeader_name__1Pq-m\",\"actions\":\"ConversationHeader_actions__2lTEz\",\"icon\":\"ConversationHeader_icon__2CCis\",\"selected\":\"ConversationHeader_selected__3R5AM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConversationPreview_container__FZNF9\",\"selected\":\"ConversationPreview_selected__17oVr\",\"avatar_container\":\"ConversationPreview_avatar_container__3rnop\",\"avatar\":\"ConversationPreview_avatar__1XmbG\",\"metadata\":\"ConversationPreview_metadata__3ClGw\",\"unread\":\"ConversationPreview_unread__1UIZJ\",\"name\":\"ConversationPreview_name__tP093\",\"preview\":\"ConversationPreview_preview__2-YyJ\",\"empty_preview\":\"ConversationPreview_empty_preview__38x5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"WindowActions_button__2We4n\",\"close\":\"WindowActions_close__2RRqz\",\"minimize\":\"WindowActions_minimize__Xi0aB\",\"fullscreen\":\"WindowActions_fullscreen__Mw0fF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatInput_container__28dS8\",\"label\":\"ChatInput_label__3VoI2\",\"input\":\"ChatInput_input__2so-i\",\"icon\":\"ChatInput_icon__3LJca\"};"],"sourceRoot":""}